generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model users {
  id            Int            @id @default(autoincrement())
  userId        String         @unique
  fullName      String
  email         String         @unique
  platform      String
  admin         Boolean        @default(false)
  verified      Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  balance       balance?
  leaveRequests leaveRequest[]
  subscriptions subscription[]
  payments      payment[]
}

model subscription {
  id             Int            @id @default(autoincrement())
  userId         String
  subPlan        String
  subSlot        Int
  subDuration    String
  subAmount      String
  subEmail       String
  subPassword    String?
  status         String         @default("pending")
  subId          String         @unique
  subCategory    String
  subSubCategory String
  shareType      String
  subRemSlot     Int
  crew           String[]       @default([])
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  leaveRequests  leaveRequest[]
  user           users          @relation(fields: [userId], references: [userId])
}

model balance {
  userId    String    @id
  balance   Int?      @default(50)
  withdrawn Int?      @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  user      users     @relation(fields: [userId], references: [userId])
}

model leaveRequest {
  id           Int          @id @default(autoincrement())
  userId       String
  subId        String
  status       String?      @default("pending")
  createdAt    DateTime?    @default(now())
  expiresAt    DateTime?
  subscription subscription @relation(fields: [subId], references: [subId])
  user         users        @relation(fields: [userId], references: [userId])
}

model sessions {
  id           Int       @id @default(autoincrement())
  session_key  String    @unique @db.VarChar(255)
  session_data Json
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
}

model payment {
  id        Int      @id @default(autoincrement())
  userId    String
  subPlan   String
  amount    String
  reference String   @unique
  status    String
  createdAt DateTime @default(now())
  user      users    @relation(fields: [userId], references: [userId])

  @@index([userId])
}
